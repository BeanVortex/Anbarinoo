package ir.darkdeveloper.anbarinoo.extentions;

import org.junit.jupiter.api.extension.*;
import org.springframework.test.context.DynamicPropertyRegistry;
import org.springframework.test.context.DynamicPropertySource;
import org.testcontainers.containers.PostgreSQLContainer;

//@Testcontainers
public class DatabaseSetup  implements BeforeAllCallback {

    // static keyword makes container for all tests, if not provided, everytime for each test, a container will be created
    // and then deleted
//    @Container
    private static final PostgreSQLContainer container =
            (PostgreSQLContainer) new PostgreSQLContainer("postgres:14.5-alpine")
                    .withReuse(true);
    // statically setting properties to the spring context
//            .withDatabaseName("db")
//            .withUsername("dd")
//            .withPassword("1234");

    // this script should be run for the first time
    // echo testcontainers.reuse.enable=true  > ~/.testcontainers.properties

    // Dynamically setting properties generated by container to the spring context
    @DynamicPropertySource
    public static void overrideProps(DynamicPropertyRegistry registry) {
        registry.add("spring.datasource.url", container::getJdbcUrl);
        registry.add("spring.datasource.username", container::getUsername);
        registry.add("spring.datasource.password", container::getPassword);
//        registry.add("spring.datasource.driver-class-name", container::getDriverClassName);
    }

    @Override
    public void beforeAll(ExtensionContext context) {
        container.start();
    }

}
